{"version":3,"sources":["tictactoe.js","Box.js","Board.js","reset.svg","Game.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["board","winner","round","player","TTT","boardSize","this","maxRounds","Math","pow","x","y","check","ret","i","gameOver","condition","Box","props","useState","value","setValue","useEffect","id","onClick","Board","gridSize","concat","style","display","gridTemplateRows","gridTemplateColumns","map","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","stroke","strokeLinejoin","d","fill","strokeWidth","strokeLinecap","transform","strokeMiterlimit","SvgReset","_ref","svgRef","title","titleId","xmlns","viewBox","height","width","ref","ForwardRef","ttt","Game","turnText","setTurnText","roundText","setRoundText","getBoard","setBoard","getPlayer","getRound","getWinner","className","restart","e","move","Home","setBoardSize","error","setError","onSubmit","preventDefault","isNaN","onSubmitCallback","href","type","onChange","placeholder","App","page","setPage","getSize","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fd90f3f.chunk.js","sourcesContent":["const board = []\r\nvar winner = false\r\nvar round = 0\r\nvar player = 'X'\r\n\r\nexport default class TTT {\r\n    constructor(boardSize) {\r\n        this.boardSize = boardSize\r\n        this.maxRounds = Math.pow(boardSize, 2)\r\n        for (let x = 0; x < boardSize; x++) { // create the 2d board\r\n            board[x] = []\r\n            for (let y = 0; y < boardSize; y++) {\r\n                board[x][y] = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    move(x, y) {\r\n        if (board[x][y] === '' && winner === false) {\r\n            player = (round % 2) ? \"O\" : \"X\"\r\n            board[x][y] = player\r\n            round++\r\n            this.check(x, y)\r\n            \r\n            var ret = player // return current player and not the next one\r\n            \r\n            player = (round % 2) ? \"O\" : \"X\"\r\n            return ret\r\n        } else {\r\n            return board[x][y]\r\n        }\r\n    }\r\n    check(x, y) {\r\n        for (let i = 0; i < this.boardSize; i++) { // check col\r\n            if (board[x][i] !== player)\r\n                break\r\n            if (i === this.boardSize - 1) {\r\n                this.gameOver(0)\r\n                return\r\n            }\r\n        }\r\n        for (let i = 0; i < this.boardSize; i++) { // check row\r\n            if (board[i][y] !== player)\r\n                break\r\n            if (i === this.boardSize - 1) {\r\n                this.gameOver(0)\r\n                return\r\n            }\r\n        }\r\n        if (x === y) { // check diag\r\n            for (let i = 0; i < this.boardSize; i++) {\r\n                if (board[i][i] !== player)\r\n                    break\r\n                if (i === this.boardSize - 1) {\r\n                    this.gameOver(0)\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        if (x + y === this.boardSize - 1) { //check anti diag\r\n            for (let i = 0; i < this.boardSize; i++) {\r\n                if (board[i][(this.boardSize - 1) - i] !== player)\r\n                    break\r\n                if (i === this.boardSize - 1) {\r\n                    this.gameOver(0)\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        if (round === this.maxRounds) {\r\n            this.gameOver(1)\r\n            return\r\n        }\r\n    }\r\n\r\n    gameOver(condition) {\r\n        if (condition === 0) {\r\n            winner = player\r\n        }\r\n        if (condition === 1) {\r\n            winner = 'draw'\r\n        }\r\n    }\r\n\r\n    restart() {\r\n        winner = false\r\n        round = 0\r\n        for (let x = 0; x < this.boardSize; x++) {\r\n            for (let y = 0; y < this.boardSize; y++) {\r\n                board[x][y] = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    getBoard() {\r\n        return board\r\n    }\r\n    getPlayer() {\r\n        return player\r\n    }\r\n    getRound() {\r\n        return round\r\n    }\r\n    getWinner() {\r\n        return winner\r\n    }\r\n}","import { useState, useEffect } from 'react'\r\n\r\nfunction Box(props) { // id, onClick, value\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setValue(props.value);\r\n      }, [props.value]);\r\n\r\n    return (\r\n        <button id={props.id} onClick={props.onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Box\r\n","import Box from './Box'\r\n\r\nfunction Board(props) {\r\n\r\n    var gridSize = ''\r\n    for (var i = 0; i < props.boardSize; i++) {\r\n        gridSize = gridSize.concat(' 6em')\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'grid',\r\n            gridTemplateRows: gridSize,\r\n            gridTemplateColumns: gridSize\r\n        }}>\r\n            {\r\n                props.board.map((i, x) => (\r\n                    i.map((value, y) => (\r\n                        <Box key={`${x}${y}`} id={`${x}${y}`} value={value} onClick={props.onClick} />\r\n                    ))\r\n                ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Board\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"current\",\n  strokeLinejoin: \"round\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M160.565 180.58a64.161 64.161 0 01-68.082 30.849 64.161 64.161 0 01-51.096-54.554 64.161 64.161 0 0135.235-65.92 64.161 64.161 0 0173.747 12.176\",\n  fill: \"none\",\n  strokeWidth: 26.458,\n  strokeLinecap: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  transform: \"matrix(1.49313 0 0 1.52605 -82.585 -56.862)\",\n  d: \"M168.235 112.401H133.39l8.711-15.088 8.711-15.089 8.712 15.089z\",\n  fill: \"current\",\n  strokeWidth: 17.528,\n  strokeLinecap: \"square\",\n  strokeMiterlimit: 2.1\n}));\n\nfunction SvgReset(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 210 297\",\n    height: \"297mm\",\n    width: \"210mm\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReset);\nexport default __webpack_public_path__ + \"static/media/reset.8fad1e61.svg\";\nexport { ForwardRef as ReactComponent };","import './Game.css';\r\nimport TTT from './tictactoe'\r\nimport Board from './Board'\r\nimport { ReactComponent as Reset } from './reset.svg';\r\nimport { useState, useEffect } from 'react'\r\n\r\nvar boardSize = 3\r\nvar ttt = new TTT(boardSize)\r\n\r\nfunction Game(props) {\r\n\r\n  useEffect(() => {\r\n    if (props.boardSize) {\r\n      boardSize = props.boardSize\r\n    }\r\n    ttt = new TTT(boardSize)\r\n    check()\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const [turnText, setTurnText] = useState()\r\n  const [roundText, setRoundText] = useState()\r\n  const [board, setBoard] = useState(ttt.getBoard())\r\n\r\n  function boxClicked(e) {\r\n    const id = e.target.id\r\n    const x = id[0]\r\n    const y = id[1]\r\n    ttt.move(x, y)\r\n    setBoard(ttt.getBoard)\r\n    check()\r\n  }\r\n\r\n  function check() {\r\n    const player = ttt.getPlayer()\r\n    const round = ttt.getRound()\r\n    const winner = ttt.getWinner()\r\n    switch (winner) {\r\n      case 'X':\r\n        setTurnText('X wins!')\r\n        break\r\n      case 'O':\r\n        setTurnText('O wins!')\r\n        break\r\n      case 'draw':\r\n        setTurnText('Draw!')\r\n        break\r\n      default:\r\n        setTurnText(`${player}'s turn`)\r\n        break\r\n    }\r\n    setRoundText(`round: ${round}`)\r\n  }\r\n\r\n  function restart() {\r\n    ttt.restart()\r\n    check()\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button id='restartButton' onClick={restart}>\r\n        <Reset id='restart' fill='#ECEFF4' stroke='#ECEFF4' />\r\n      </button>\r\n      <Board boardSize={boardSize} board={board} onClick={boxClicked} />\r\n      <p>{turnText}</p>\r\n      <p>{roundText}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import './Home.css'\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const [boardSize, setBoardSize] = useState(3)\r\n    const [error, setError] = useState()\r\n\r\n    function handleBoardSize(e) {\r\n        setBoardSize(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (boardSize < 3) {\r\n            setError('That is too small, min 3')\r\n        } else if (boardSize > 10) {\r\n            setError('That is too big, max 9')\r\n        } else if (isNaN(boardSize)) {\r\n            setError('That is not a number')\r\n        } else {\r\n            props.onSubmitCallback(boardSize)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form id='home' onSubmit={handleSubmit}>\r\n            <div>\r\n                <h1>TicTacToe</h1>\r\n                <p id='github'>Check it out on <a href={\"https://github.com/sheeyang/tictactoe-react\"}>Github</a></p>\r\n            </div>\r\n            <input className='text' type=\"text\" onChange={handleBoardSize} placeholder=\"Board size\" />\r\n            <input id='submit' type=\"submit\" value=\"Play!\" />\r\n            {error\r\n                ? <p id='error'>{error}</p>\r\n                : <></>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\r\nimport Game from './Game'\r\nimport Home from './Home'\r\nimport { useState } from 'react'\r\n\r\nfunction App() {\r\n\r\n  const [page, setPage] = useState('Home')\r\n  const [boardSize, setBoardSize] = useState(3)\r\n\r\n  function getSize(data) {\r\n    setBoardSize(data)\r\n    setPage('Game')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        switch (page) {\r\n          case 'Game':\r\n            return <Game boardSize={boardSize} />\r\n          default:\r\n            return <Home onSubmitCallback={getSize} />\r\n        }\r\n      })()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}